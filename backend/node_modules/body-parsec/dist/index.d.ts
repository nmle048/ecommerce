/// <reference types="node" />
import { IncomingMessage, ServerResponse } from 'http';
import { EventEmitter } from 'events';

declare type ReqWithBody = IncomingMessage & {
    body?: any;
} & EventEmitter;
declare const parsec: <T extends ReqWithBody>(fn: (body: any) => void) => (req: T | ReqWithBody, _res: ServerResponse) => Promise<void>;
declare const json: () => (req: ReqWithBody, _res?: ServerResponse, next?: () => void) => Promise<void>;
declare const raw: () => (req: ReqWithBody, _res?: ServerResponse, next?: () => void) => Promise<void>;
declare const text: () => (req: ReqWithBody, _res?: ServerResponse, next?: () => void) => Promise<void>;
declare const urlencoded: () => (req: ReqWithBody, _res?: ServerResponse, next?: () => void) => Promise<void>;

export { ReqWithBody, parsec as custom, json, raw, text, urlencoded };
